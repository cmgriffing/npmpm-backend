{
  "name": "npmpm-backend",
  "version": "0.0.0",
  "description": "Backend for a game to find words that are NOT already libs in NPM",
  "scripts": {
    "-------------- Init --------------": "",
    "init:arc": "npx arc init",
    "init:rename": "node scripts/rename-index-files.js",
    "init:shared": "node scripts/copy-shared.js",
    "init": "npm-run-all -s build:arc-config init:arc init:rename init:shared",
    "-------------- Scaffold --------------": "",
    "scaffold:schema:requests:tsToZod": "ts-to-zod src/shared/request-types.ts src/shared/request-schemas.ts",
    "scaffold:schema:responses:tsToZod": "ts-to-zod src/shared/response-types.ts src/shared/response-schemas.ts",
    "scaffold:schema:zodToJsonSchema": "ts-node scripts/zod-to-json-schema.ts",
    "scaffold:schema": "npm-run-all -s scaffold:schema:requests:tsToZod scaffold:schema:responses:tsToZod scaffold:schema:zodToJsonSchema",
    "scaffold:openapi": "ts-node scripts/build-openapi-yaml.ts",
    "scaffold": "npm-run-all -s scaffold:schema scaffold:openapi",
    "-------------- Build --------------": "",
    "build:preferences": "ts-node scripts/set-env-vars-docker.ts",
    "build:preferences:dev": "ts-node scripts/set-env-vars-docker.ts",
    "build:preferences:circleci": "ts-node scripts/set-env-vars-circleci.ts",
    "build:arc-config": "ts-node scripts/build-arc-file.ts && ls -a",
    "build:ts": "tsc -p build.tsconfig.json",
    "build:webpack": "webpack  --config webpack.config.js",
    "build:dev": "npm-run-all -s init:arc  build:arc-config build:ts",
    "build:staging": "npm-run-all -s build:preferences:circleci build:arc-config scaffold:schema init:shared build:ts",
    "build:production": "npm-run-all -s build:preferences:circleci build:arc-config scaffold:schema init:shared build:ts build:webpack",
    "-------------- Core --------------": "",
    "watch:http": "nodemon --exec \"npm run start\" -w ./src/http -e ts --ignore './**/node_modules/**/*'",
    "fixtures:scaffold": "ts-node scripts/generate-fixtures.ts",
    "fixtures": "wait-on http://localhost:3333/ && npm run fixtures:scaffold",
    "dev": "npm-run-all -s watch:http",
    "start:arc": "arc sandbox",
    "start": "npm-run-all -p fixtures start:arc",
    "prestart": "npm run build:dev",
    "deploy": "arc deploy",
    "deploy:staging": "npm-run-all -s build:staging deploy",
    "deploy:production": "npm-run-all -s build:production deploy",
    "-------------- Debugging --------------": "",
    "debug:ls:shared": "ls -a src/shared"
  },
  "dependencies": {
    "@architect/functions": "^4.0.0",
    "axios": "^0.24.0",
    "bcrypt": "^5.0.1",
    "html-entities": "^2.3.2",
    "js-string-escape": "^1.0.1",
    "jsonschema": "^1.4.0",
    "jsonwebtoken": "^8.5.1",
    "nanoid": "^3.1.25",
    "openapi-types": "^9.3.1",
    "ts-interface-checker": "^1.0.0",
    "zod": "^3.5.1"
  },
  "devDependencies": {
    "@architect/architect": "^9.4.1",
    "@architect/env": "^2.0.6",
    "@types/architect": "^0.1.0",
    "@types/architect__functions": "^3.13.6",
    "@types/bcrypt": "^5.0.0",
    "@types/fs-extra": "^9.0.13",
    "@types/jsonwebtoken": "^8.5.5",
    "@types/mustache": "^4.1.2",
    "fs-extra": "^10.0.0",
    "glob": "^7.2.0",
    "jsdoc": "^3.6.7",
    "json-schema-to-typescript": "^10.1.5",
    "mustache": "^4.2.0",
    "nodemon": "^2.0.12",
    "npm-run-all": "^4.1.5",
    "ts-interface-builder": "^0.3.0",
    "ts-node": "^10.4.0",
    "ts-to-zod": "^1.4.0",
    "tsoa": "^3.14.1",
    "typescript": "^4.2.2",
    "wait-on": "^6.0.0",
    "webpack": "^5.64.4",
    "webpack-cli": "^4.9.1",
    "yaml": "^1.10.2",
    "zod-to-json-schema": "^3.11.2"
  }
}
